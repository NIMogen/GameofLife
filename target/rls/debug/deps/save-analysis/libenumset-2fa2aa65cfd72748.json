{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11","program":"/home/noah/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","enumset","--edition=2018","/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2fa2aa65cfd72748","-C","extra-filename=-2fa2aa65cfd72748","--out-dir","/home/noah/Programming/life/target/rls/debug/deps","-L","dependency=/home/noah/Programming/life/target/rls/debug/deps","--extern","enumset_derive=/home/noah/Programming/life/target/rls/debug/deps/libenumset_derive-96271def0929e922.so","--cap-lints","allow","--error-format=json","--sysroot","/home/noah/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/noah/Programming/life/target/rls/debug/deps/libenumset-2fa2aa65cfd72748.rmeta"},"prelude":{"crate_id":{"name":"enumset","disambiguator":[18197871450658107299,0]},"crate_root":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src","external_crates":[{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","num":4,"id":{"name":"enumset_derive","disambiguator":[2826124492896392549,0]}}],"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":0,"byte_end":35771,"line_start":1,"line_end":971,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":0},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3170,"byte_end":3174,"line_start":94,"line_end":94,"column_start":15,"column_end":19},"alias_span":null,"name":"core_export","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":4,"index":75},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8625,"byte_end":8636,"line_start":220,"line_end":220,"column_start":25,"column_end":36},"alias_span":null,"name":"EnumSetType","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":0,"byte_end":35771,"line_start":1,"line_end":971,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":102},{"krate":0,"index":133},{"krate":0,"index":454},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":142},{"krate":0,"index":147},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":250},{"krate":0,"index":254}],"decl_id":null,"docs":" A library for defining enums that can be used in compact bit sets. It supports enums up to 128\n variants, and has a macro to use these sets in constants.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(missing_docs)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11,"byte_end":35,"line_start":2,"line_end":2,"column_start":1,"column_end":25}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":94,"byte_end":131,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/ A library for defining enums that can be used in compact bit sets. It supports enums up to 128","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":133,"byte_end":231,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/ variants, and has a macro to use these sets in constants.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":232,"byte_end":293,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":294,"byte_end":297,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For serde support, enable the `serde` feature.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":298,"byte_end":348,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":349,"byte_end":352,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Defining enums for use with EnumSet","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":353,"byte_end":394,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":395,"byte_end":398,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Enums to be used with [`EnumSet`] should be defined using `#[derive(EnumSetType)]`:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":399,"byte_end":486,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":487,"byte_end":490,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":491,"byte_end":502,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":503,"byte_end":524,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/ #[derive(EnumSetType, Debug)]","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":525,"byte_end":558,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ pub enum Enum {","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":559,"byte_end":578,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/    A, B, C, D, E, F, G,","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":579,"byte_end":606,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":607,"byte_end":612,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":613,"byte_end":620,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":621,"byte_end":624,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For more information on more advanced use cases, see the documentation for","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":625,"byte_end":703,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ [`#[derive(EnumSetType)]`](./derive.EnumSetType.html).","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":704,"byte_end":762,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":763,"byte_end":766,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Working with EnumSets","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":767,"byte_end":794,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":795,"byte_end":798,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ EnumSets can be constructed via [`EnumSet::new()`] like a normal set. In addition,","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":799,"byte_end":885,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"/ `#[derive(EnumSetType)]` creates operator overloads that allow you to create EnumSets like so:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":886,"byte_end":984,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":985,"byte_end":988,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":989,"byte_end":1000,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1001,"byte_end":1022,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1023,"byte_end":1096,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ let new_set = Enum::A | Enum::C | Enum::G;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1097,"byte_end":1143,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(new_set.len(), 3);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1144,"byte_end":1177,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1178,"byte_end":1185,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1186,"byte_end":1189,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ All bitwise operations you would expect to work on bitsets also work on both EnumSets and","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1190,"byte_end":1283,"line_start":38,"line_end":38,"column_start":1,"column_end":94}},{"value":"/ enums with `#[derive(EnumSetType)]`:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1284,"byte_end":1324,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/ ```rust","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1325,"byte_end":1336,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1337,"byte_end":1358,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1359,"byte_end":1432,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ // Intersection of sets","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1433,"byte_end":1460,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ assert_eq!((Enum::A | Enum::B) & Enum::C, EnumSet::empty());","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1461,"byte_end":1525,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((Enum::A | Enum::B) & Enum::A, Enum::A);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1526,"byte_end":1581,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Enum::A & Enum::B, EnumSet::empty());","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1582,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1635,"byte_end":1638,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // Symmetric difference of sets","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1639,"byte_end":1674,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/ assert_eq!((Enum::A | Enum::B) ^ (Enum::B | Enum::C), Enum::A | Enum::C);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1675,"byte_end":1752,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(Enum::A ^ Enum::C, Enum::A | Enum::C);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1753,"byte_end":1806,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1807,"byte_end":1810,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Difference of sets","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1811,"byte_end":1836,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ assert_eq!((Enum::A | Enum::B | Enum::C) - Enum::B, Enum::A | Enum::C);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1837,"byte_end":1912,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1913,"byte_end":1916,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // Complement of sets","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1917,"byte_end":1942,"line_start":55,"line_end":55,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(!(Enum::E | Enum::G), Enum::A | Enum::B | Enum::C | Enum::D | Enum::F);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":1943,"byte_end":2029,"line_start":56,"line_end":56,"column_start":1,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2030,"byte_end":2037,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2038,"byte_end":2041,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The [`enum_set!`] macro allows you to create EnumSets in constant contexts:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2042,"byte_end":2121,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2122,"byte_end":2125,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2126,"byte_end":2137,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2138,"byte_end":2159,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2160,"byte_end":2233,"line_start":63,"line_end":63,"column_start":1,"column_end":74}},{"value":"/ const CONST_SET: EnumSet<Enum> = enum_set!(Enum::A | Enum::B);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2234,"byte_end":2300,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(CONST_SET, Enum::A | Enum::B);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2301,"byte_end":2346,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2347,"byte_end":2354,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2355,"byte_end":2358,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Mutable operations on the [`EnumSet`] otherwise similarly to Rust's builtin sets:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2359,"byte_end":2444,"line_start":68,"line_end":68,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2445,"byte_end":2448,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2449,"byte_end":2460,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2461,"byte_end":2482,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/ # #[derive(EnumSetType, Debug)] pub enum Enum { A, B, C, D, E, F, G }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2483,"byte_end":2556,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"/ let mut set = EnumSet::new();","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2557,"byte_end":2590,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/ set.insert(Enum::A);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2591,"byte_end":2615,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/ set.insert_all(Enum::E | Enum::G);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2616,"byte_end":2654,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/ assert!(set.contains(Enum::A));","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2655,"byte_end":2690,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/ assert!(!set.contains(Enum::B));","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2691,"byte_end":2727,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(set, Enum::A | Enum::E | Enum::G);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2728,"byte_end":2777,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2778,"byte_end":2785,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3047,"byte_end":3057,"line_start":90,"line_end":90,"column_start":9,"column_end":19},"name":"__internal","qualname":"::__internal","value":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37}],"decl_id":null,"docs":" Everything in this module is internal API and may change at any time.\n","sig":null,"attributes":[{"value":"/ Everything in this module is internal API and may change at any time.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":2965,"byte_end":3038,"line_start":89,"line_end":89,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":37},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3438,"byte_end":3456,"line_start":101,"line_end":101,"column_start":22,"column_end":40},"name":"EnumSetTypePrivate","qualname":"::__internal::EnumSetTypePrivate","value":"EnumSetTypePrivate","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" The actual members of EnumSetType. Put here to avoid polluting global namespaces.\n","sig":null,"attributes":[{"value":"/ The actual members of EnumSetType. Put here to avoid polluting global namespaces.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3331,"byte_end":3416,"line_start":100,"line_end":100,"column_start":5,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3530,"byte_end":3534,"line_start":103,"line_end":103,"column_start":14,"column_end":18},"name":"Repr","qualname":"::__internal::EnumSetTypePrivate::Repr","value":"type Repr: EnumSetTypeRepr;","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" The underlying type used to store the bitset.\n","sig":null,"attributes":[{"value":"/ The underlying type used to store the bitset.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3467,"byte_end":3516,"line_start":102,"line_end":102,"column_start":9,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":39},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3624,"byte_end":3632,"line_start":105,"line_end":105,"column_start":15,"column_end":23},"name":"ALL_BITS","qualname":"::__internal::EnumSetTypePrivate::ALL_BITS","value":"Self::Repr","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" A mask of bits that are valid in the bitset.\n","sig":null,"attributes":[{"value":"/ A mask of bits that are valid in the bitset.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3561,"byte_end":3609,"line_start":104,"line_end":104,"column_start":9,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3723,"byte_end":3736,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"enum_into_u32","qualname":"::__internal::EnumSetTypePrivate::enum_into_u32","value":"pub fn enum_into_u32(Self) -> u32","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" Converts an enum of this type into its bit position.\n","sig":null,"attributes":[{"value":"/ Converts an enum of this type into its bit position.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3655,"byte_end":3711,"line_start":107,"line_end":107,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3825,"byte_end":3838,"line_start":110,"line_end":110,"column_start":19,"column_end":32},"name":"enum_from_u32","qualname":"::__internal::EnumSetTypePrivate::enum_from_u32","value":"pub unsafe fn enum_from_u32(u32) -> Self","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" Converts a bit position into an enum value.\n","sig":null,"attributes":[{"value":"/ Converts a bit position into an enum value.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":3759,"byte_end":3806,"line_start":109,"line_end":109,"column_start":9,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9028,"byte_end":9039,"line_start":229,"line_end":229,"column_start":18,"column_end":29},"name":"EnumSetType","qualname":"::EnumSetType","value":"EnumSetType: Copy + Eq + EnumSetTypePrivate","parent":null,"children":[],"decl_id":null,"docs":" The trait used to define enum types that may be used with [`EnumSet`].","sig":null,"attributes":[{"value":"/ The trait used to define enum types that may be used with [`EnumSet`].","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8639,"byte_end":8713,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8714,"byte_end":8717,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This trait must be impelmented using `#[derive(EnumSetType)]`, is not public API, and its","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8718,"byte_end":8811,"line_start":224,"line_end":224,"column_start":1,"column_end":94}},{"value":"/ internal structure may change at any time with no warning.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8812,"byte_end":8874,"line_start":225,"line_end":225,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8875,"byte_end":8878,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ For full documentation on the procedural derive and its options, see","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8879,"byte_end":8951,"line_start":227,"line_end":227,"column_start":1,"column_end":73}},{"value":"/ [`#[derive(EnumSetType)]`](./derive.EnumSetType.html).","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":8952,"byte_end":9010,"line_start":228,"line_end":228,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9689,"byte_end":9708,"line_start":240,"line_end":240,"column_start":18,"column_end":37},"name":"EnumSetTypeWithRepr","qualname":"::EnumSetTypeWithRepr","value":"EnumSetTypeWithRepr: EnumSetType + EnumSetTypePrivate<Repr = <Self as EnumSetTypeWithRepr>::Repr>","parent":null,"children":[{"krate":0,"index":101}],"decl_id":null,"docs":" An [`EnumSetType`] for which [`EnumSet`]s have a guaranteed in-memory representation.","sig":null,"attributes":[{"value":"/ An [`EnumSetType`] for which [`EnumSet`]s have a guaranteed in-memory representation.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9076,"byte_end":9165,"line_start":231,"line_end":231,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9166,"byte_end":9169,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ An implementation of this trait is generated by using","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9170,"byte_end":9227,"line_start":233,"line_end":233,"column_start":1,"column_end":58}},{"value":"/ [`#[derive(EnumSetType)]`](./derive.EnumSetType.html) with the annotation","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9228,"byte_end":9305,"line_start":234,"line_end":234,"column_start":1,"column_end":78}},{"value":"/ `#[enumset(repr = \"…\")]`, where `…` is `u8`, `u16`, `u32`, `u64` or `u128`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9306,"byte_end":9389,"line_start":235,"line_end":235,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9390,"byte_end":9393,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ For any type `T` that implements this trait, the in-memory representation of `EnumSet<T>`","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9394,"byte_end":9487,"line_start":237,"line_end":237,"column_start":1,"column_end":94}},{"value":"/ is guaranteed to be `Repr`. This guarantee is useful for FFI. See [the `EnumSet` documentation","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9488,"byte_end":9586,"line_start":238,"line_end":238,"column_start":1,"column_end":99}},{"value":"/ under “FFI, Safety and `repr`”][EnumSet#ffi-safety-and-repr] for an example.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9587,"byte_end":9671,"line_start":239,"line_end":239,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":101},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9841,"byte_end":9845,"line_start":244,"line_end":244,"column_start":10,"column_end":14},"name":"Repr","qualname":"::EnumSetTypeWithRepr::Repr","value":"type Repr: EnumSetTypeRepr;","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The guaranteed representation.\n","sig":null,"attributes":[{"value":"/ The guaranteed representation.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9797,"byte_end":9831,"line_start":243,"line_end":243,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13850,"byte_end":13857,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"EnumSet","qualname":"::EnumSet","value":"EnumSet { __priv_repr }","parent":null,"children":[{"krate":0,"index":437}],"decl_id":null,"docs":" An efficient set type for enums.","sig":null,"attributes":[{"value":"/ An efficient set type for enums.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9867,"byte_end":9903,"line_start":247,"line_end":247,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9904,"byte_end":9907,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ It is implemented using a bitset stored using the smallest integer that can fit all bits","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9908,"byte_end":10000,"line_start":249,"line_end":249,"column_start":1,"column_end":93}},{"value":"/ in the underlying enum. In general, an enum variant with a discriminator of `n` is stored in","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10001,"byte_end":10097,"line_start":250,"line_end":250,"column_start":1,"column_end":97}},{"value":"/ the nth least significant bit (corresponding with a mask of, e.g. `1 << enum as u32`).","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10098,"byte_end":10188,"line_start":251,"line_end":251,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10189,"byte_end":10192,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ # Numeric representation","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10193,"byte_end":10221,"line_start":253,"line_end":253,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10222,"byte_end":10225,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ `EnumSet` is internally implemented using integer types, and as such can be easily converted","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10226,"byte_end":10322,"line_start":255,"line_end":255,"column_start":1,"column_end":97}},{"value":"/ from and to numbers.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10323,"byte_end":10347,"line_start":256,"line_end":256,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10348,"byte_end":10351,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Each bit of the underlying integer corresponds to at most one particular enum variant. If the","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10352,"byte_end":10449,"line_start":258,"line_end":258,"column_start":1,"column_end":98}},{"value":"/ corresponding bit for a variant is set, it present in the set. Bits that do not correspond to","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10450,"byte_end":10547,"line_start":259,"line_end":259,"column_start":1,"column_end":98}},{"value":"/ any variant are always unset.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10548,"byte_end":10581,"line_start":260,"line_end":260,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10582,"byte_end":10585,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ By default, each enum variant is stored in a bit corresponding to its discriminator. An enum","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10586,"byte_end":10682,"line_start":262,"line_end":262,"column_start":1,"column_end":97}},{"value":"/ variant with a discriminator of `n` is stored in the `n + 1`th least significant bit","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10683,"byte_end":10771,"line_start":263,"line_end":263,"column_start":1,"column_end":89}},{"value":"/ (corresponding to a mask of e.g. `1 << enum as u32`).","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10772,"byte_end":10829,"line_start":264,"line_end":264,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10830,"byte_end":10833,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ # Serialization","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10834,"byte_end":10853,"line_start":266,"line_end":266,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10854,"byte_end":10857,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature is enabled, `EnumSet`s can be serialized and deserialized using","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10858,"byte_end":10950,"line_start":268,"line_end":268,"column_start":1,"column_end":93}},{"value":"/ the `serde` crate. The exact serialization format can be controlled with additional attributes","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":10951,"byte_end":11049,"line_start":269,"line_end":269,"column_start":1,"column_end":99}},{"value":"/ on the enum type. These attributes are valid regardless of whether the `serde` feature","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11050,"byte_end":11140,"line_start":270,"line_end":270,"column_start":1,"column_end":91}},{"value":"/ is enabled.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11141,"byte_end":11156,"line_start":271,"line_end":271,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11157,"byte_end":11160,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ By default, `EnumSet`s serialize by directly writing out the underlying bitset as an integer","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11161,"byte_end":11257,"line_start":273,"line_end":273,"column_start":1,"column_end":97}},{"value":"/ of the smallest type that can fit in the underlying enum. You can add a","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11258,"byte_end":11333,"line_start":274,"line_end":274,"column_start":1,"column_end":76}},{"value":"/ `#[enumset(serialize_repr = \"u8\")]` attribute to your enum to control the integer type used","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11334,"byte_end":11429,"line_start":275,"line_end":275,"column_start":1,"column_end":96}},{"value":"/ for serialization. This can be important for avoiding unintentional breaking changes when","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11430,"byte_end":11523,"line_start":276,"line_end":276,"column_start":1,"column_end":94}},{"value":"/ `EnumSet`s are serialized with formats like `bincode`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11524,"byte_end":11582,"line_start":277,"line_end":277,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11583,"byte_end":11586,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ By default, unknown bits are ignored and silently removed from the bitset. To override thris","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11587,"byte_end":11683,"line_start":279,"line_end":279,"column_start":1,"column_end":97}},{"value":"/ behavior, you can add a `#[enumset(serialize_deny_unknown)]` attribute. This will cause","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11684,"byte_end":11775,"line_start":280,"line_end":280,"column_start":1,"column_end":92}},{"value":"/ deserialization to fail if an invalid bit is set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11776,"byte_end":11829,"line_start":281,"line_end":281,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11830,"byte_end":11833,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ In addition, the `#[enumset(serialize_as_list)]` attribute causes the `EnumSet` to be","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11834,"byte_end":11923,"line_start":283,"line_end":283,"column_start":1,"column_end":90}},{"value":"/ instead serialized as a list of enum variants. This requires your enum type implement","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":11924,"byte_end":12013,"line_start":284,"line_end":284,"column_start":1,"column_end":90}},{"value":"/ [`Serialize`] and [`Deserialize`]. Note that this is a breaking change.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12014,"byte_end":12089,"line_start":285,"line_end":285,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12090,"byte_end":12093,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ # FFI, Safety and `repr`","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12094,"byte_end":12122,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12123,"byte_end":12126,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ If an enum type `T` is annotated with [`#[enumset(repr = \"R\")]`][derive@EnumSetType#options],","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12127,"byte_end":12224,"line_start":289,"line_end":289,"column_start":1,"column_end":98}},{"value":"/ then several things happen:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12225,"byte_end":12256,"line_start":290,"line_end":290,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12257,"byte_end":12260,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ * `T` will implement <code>[EnumSetTypeWithRepr]&lt;Repr = R&gt;</code> in addition to","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12261,"byte_end":12351,"line_start":292,"line_end":292,"column_start":1,"column_end":91}},{"value":"/   [`EnumSetType`].","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12352,"byte_end":12374,"line_start":293,"line_end":293,"column_start":1,"column_end":23}},{"value":"/ * The `EnumSet` methods with `repr` in their name, such as [`as_repr`][EnumSet::as_repr] and","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12375,"byte_end":12471,"line_start":294,"line_end":294,"column_start":1,"column_end":97}},{"value":"/   [`from_repr`][EnumSet::from_repr], will be available for `EnumSet<T>`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12472,"byte_end":12548,"line_start":295,"line_end":295,"column_start":1,"column_end":77}},{"value":"/ * The in-memory representation of `EnumSet<T>` is guaranteed to be `R`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12549,"byte_end":12624,"line_start":296,"line_end":296,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12625,"byte_end":12628,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ That last guarantee makes it sound to send `EnumSet<T>` across an FFI boundary. For example:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12629,"byte_end":12725,"line_start":298,"line_end":298,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12726,"byte_end":12729,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12730,"byte_end":12737,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/ # use enumset::*;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12738,"byte_end":12759,"line_start":301,"line_end":301,"column_start":1,"column_end":22}},{"value":"/ #","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12760,"byte_end":12765,"line_start":302,"line_end":302,"column_start":1,"column_end":6}},{"value":"/ # mod ffi_impl {","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12766,"byte_end":12786,"line_start":303,"line_end":303,"column_start":1,"column_end":21}},{"value":"/ #     // This example “foreign” function is actually written in Rust, but for the sake","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12787,"byte_end":12881,"line_start":304,"line_end":304,"column_start":1,"column_end":91}},{"value":"/ #     // of example, we'll pretend it's written in C.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12882,"byte_end":12939,"line_start":305,"line_end":305,"column_start":1,"column_end":58}},{"value":"/ #     #[no_mangle]","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12940,"byte_end":12962,"line_start":306,"line_end":306,"column_start":1,"column_end":23}},{"value":"/ #     extern \"C\" fn some_foreign_function(set: u32) -> u32 {","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":12963,"byte_end":13027,"line_start":307,"line_end":307,"column_start":1,"column_end":65}},{"value":"/ #         set & 0b100","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13028,"byte_end":13053,"line_start":308,"line_end":308,"column_start":1,"column_end":26}},{"value":"/ #     }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13054,"byte_end":13065,"line_start":309,"line_end":309,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13066,"byte_end":13073,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13074,"byte_end":13079,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/ extern \"C\" {","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13080,"byte_end":13096,"line_start":312,"line_end":312,"column_start":1,"column_end":17}},{"value":"/     // This function is written in C like:","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13097,"byte_end":13143,"line_start":313,"line_end":313,"column_start":1,"column_end":47}},{"value":"/     // uint32_t some_foreign_function(uint32_t set) { … }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13144,"byte_end":13207,"line_start":314,"line_end":314,"column_start":1,"column_end":62}},{"value":"/     fn some_foreign_function(set: EnumSet<MyEnum>) -> EnumSet<MyEnum>;","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13208,"byte_end":13282,"line_start":315,"line_end":315,"column_start":1,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13283,"byte_end":13288,"line_start":316,"line_end":316,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13289,"byte_end":13292,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, EnumSetType)]","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13293,"byte_end":13326,"line_start":318,"line_end":318,"column_start":1,"column_end":34}},{"value":"/ #[enumset(repr = \"u32\")]","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13327,"byte_end":13355,"line_start":319,"line_end":319,"column_start":1,"column_end":29}},{"value":"/ enum MyEnum { A, B, C }","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13356,"byte_end":13383,"line_start":320,"line_end":320,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13384,"byte_end":13387,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ let set: EnumSet<MyEnum> = enum_set!(MyEnum::A | MyEnum::C);","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13388,"byte_end":13452,"line_start":322,"line_end":322,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13453,"byte_end":13456,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ let new_set: EnumSet<MyEnum> = unsafe { some_foreign_function(set) };","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13457,"byte_end":13530,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(new_set, enum_set!(MyEnum::C));","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13531,"byte_end":13577,"line_start":325,"line_end":325,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13578,"byte_end":13585,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13586,"byte_end":13589,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ When an `EnumSet<T>` is received via FFI, all bits that don't correspond to an enum variant","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13590,"byte_end":13685,"line_start":328,"line_end":328,"column_start":1,"column_end":96}},{"value":"/ of `T` must be set to `0`. Behavior is **undefined** if any of these bits are set to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13686,"byte_end":13779,"line_start":329,"line_end":329,"column_start":1,"column_end":94}},{"value":"repr(transparent)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13818,"byte_end":13838,"line_start":331,"line_end":331,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":437},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14021,"byte_end":14032,"line_start":336,"line_end":336,"column_start":9,"column_end":20},"name":"__priv_repr","qualname":"::EnumSet::__priv_repr","value":"<T as __internal::EnumSetTypePrivate>::Repr","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" This is public due to the [`enum_set!`] macro.\n This is **NOT** public API and may change at any time.\n","sig":null,"attributes":[{"value":"/ This is public due to the [`enum_set!`] macro.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13899,"byte_end":13949,"line_start":334,"line_end":334,"column_start":5,"column_end":55}},{"value":"/ This is **NOT** public API and may change at any time.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":13954,"byte_end":14012,"line_start":335,"line_end":335,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14271,"byte_end":14274,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `EnumSet`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `EnumSet`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14206,"byte_end":14237,"line_start":345,"line_end":345,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14242,"byte_end":14259,"line_start":346,"line_end":346,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14435,"byte_end":14439,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"only","qualname":"<EnumSet<T>>::only","value":"pub fn only(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EnumSet` containing a single element.\n","sig":null,"attributes":[{"value":"/ Returns an `EnumSet` containing a single element.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14348,"byte_end":14401,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14406,"byte_end":14423,"line_start":352,"line_end":352,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14657,"byte_end":14662,"line_start":363,"line_end":363,"column_start":12,"column_end":17},"name":"empty","qualname":"<EnumSet<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `EnumSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `EnumSet`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14537,"byte_end":14568,"line_start":359,"line_end":359,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14573,"byte_end":14576,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This is an alias for [`EnumSet::new`].","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14581,"byte_end":14623,"line_start":361,"line_end":361,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14628,"byte_end":14645,"line_start":362,"line_end":362,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14807,"byte_end":14810,"line_start":369,"line_end":369,"column_start":12,"column_end":15},"name":"all","qualname":"<EnumSet<T>>::all","value":"pub fn all() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EnumSet` containing all valid variants of the enum.\n","sig":null,"attributes":[{"value":"/ Returns an `EnumSet` containing all valid variants of the enum.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14706,"byte_end":14773,"line_start":367,"line_end":367,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14778,"byte_end":14795,"line_start":368,"line_end":368,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15246,"byte_end":15255,"line_start":379,"line_end":379,"column_start":12,"column_end":21},"name":"bit_width","qualname":"<EnumSet<T>>::bit_width","value":"pub fn bit_width() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Total number of bits used by this type. Note that the actual amount of space used is\n rounded up to the next highest integer type (`u8`, `u16`, `u32`, `u64`, or `u128`).","sig":null,"attributes":[{"value":"/ Total number of bits used by this type. Note that the actual amount of space used is","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14884,"byte_end":14972,"line_start":373,"line_end":373,"column_start":5,"column_end":93}},{"value":"/ rounded up to the next highest integer type (`u8`, `u16`, `u32`, `u64`, or `u128`).","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14977,"byte_end":15064,"line_start":374,"line_end":374,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15069,"byte_end":15072,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This is the same as [`EnumSet::variant_count`] except in enums with \"sparse\" variants.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15077,"byte_end":15167,"line_start":376,"line_end":376,"column_start":5,"column_end":95}},{"value":"/ (e.g. `enum Foo { A = 10, B = 20 }`)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15172,"byte_end":15212,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15217,"byte_end":15234,"line_start":378,"line_end":378,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15569,"byte_end":15582,"line_start":388,"line_end":388,"column_start":12,"column_end":25},"name":"variant_count","qualname":"<EnumSet<T>>::variant_count","value":"pub fn variant_count() -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of valid variants that this type can contain.","sig":null,"attributes":[{"value":"/ The number of valid variants that this type can contain.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15331,"byte_end":15391,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15396,"byte_end":15399,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This is the same as [`EnumSet::bit_width`] except in enums with \"sparse\" variants.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15404,"byte_end":15490,"line_start":385,"line_end":385,"column_start":5,"column_end":91}},{"value":"/ (e.g. `enum Foo { A = 10, B = 20 }`)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15495,"byte_end":15535,"line_start":386,"line_end":386,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15540,"byte_end":15557,"line_start":387,"line_end":387,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15719,"byte_end":15722,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"len","qualname":"<EnumSet<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this set.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in this set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15638,"byte_end":15685,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15690,"byte_end":15707,"line_start":393,"line_end":393,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15883,"byte_end":15891,"line_start":399,"line_end":399,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EnumSet<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15798,"byte_end":15849,"line_start":397,"line_end":397,"column_start":5,"column_end":56}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15854,"byte_end":15871,"line_start":398,"line_end":398,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16027,"byte_end":16032,"line_start":404,"line_end":404,"column_start":12,"column_end":17},"name":"clear","qualname":"<EnumSet<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the set.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15955,"byte_end":15993,"line_start":402,"line_end":402,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":15998,"byte_end":16015,"line_start":403,"line_end":403,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16269,"byte_end":16280,"line_start":411,"line_end":411,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<EnumSet<T>>::is_disjoint","value":"pub fn is_disjoint(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This is equivalent to\n checking for an empty intersection.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This is equivalent to","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16101,"byte_end":16191,"line_start":408,"line_end":408,"column_start":5,"column_end":95}},{"value":"/ checking for an empty intersection.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16196,"byte_end":16235,"line_start":409,"line_end":409,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16240,"byte_end":16257,"line_start":410,"line_end":410,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16511,"byte_end":16522,"line_start":417,"line_end":417,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<EnumSet<T>>::is_superset","value":"pub fn is_superset(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another, i.e., `self` contains at least all the\n values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another, i.e., `self` contains at least all the","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16356,"byte_end":16450,"line_start":414,"line_end":414,"column_start":5,"column_end":99}},{"value":"/ values in `other`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16455,"byte_end":16477,"line_start":415,"line_end":415,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16482,"byte_end":16499,"line_start":416,"line_end":416,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16773,"byte_end":16782,"line_start":423,"line_end":423,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<EnumSet<T>>::is_subset","value":"pub fn is_subset(&Self, Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e., `other` contains at least all\n the values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e., `other` contains at least all","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16620,"byte_end":16709,"line_start":420,"line_end":420,"column_start":5,"column_end":94}},{"value":"/ the values in `self`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16714,"byte_end":16739,"line_start":421,"line_end":421,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16744,"byte_end":16761,"line_start":422,"line_end":422,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16955,"byte_end":16960,"line_start":429,"line_end":429,"column_start":12,"column_end":17},"name":"union","qualname":"<EnumSet<T>>::union","value":"pub fn union(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing any elements present in either set.\n","sig":null,"attributes":[{"value":"/ Returns a set containing any elements present in either set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16857,"byte_end":16921,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":16926,"byte_end":16943,"line_start":428,"line_end":428,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17169,"byte_end":17181,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"intersection","qualname":"<EnumSet<T>>::intersection","value":"pub fn intersection(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing every element present in both sets.\n","sig":null,"attributes":[{"value":"/ Returns a set containing every element present in both sets.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17071,"byte_end":17135,"line_start":432,"line_end":432,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17140,"byte_end":17157,"line_start":433,"line_end":433,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17400,"byte_end":17410,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"difference","qualname":"<EnumSet<T>>::difference","value":"pub fn difference(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing element present in `self` but not in `other`.\n","sig":null,"attributes":[{"value":"/ Returns a set containing element present in `self` but not in `other`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17292,"byte_end":17366,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17371,"byte_end":17388,"line_start":438,"line_end":438,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17677,"byte_end":17699,"line_start":445,"line_end":445,"column_start":12,"column_end":34},"name":"symmetrical_difference","qualname":"<EnumSet<T>>::symmetrical_difference","value":"pub fn symmetrical_difference(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing every element present in either `self` or `other`, but is not\n present in both.\n","sig":null,"attributes":[{"value":"/ Returns a set containing every element present in either `self` or `other`, but is not","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17528,"byte_end":17618,"line_start":442,"line_end":442,"column_start":5,"column_end":95}},{"value":"/ present in both.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17623,"byte_end":17643,"line_start":443,"line_end":443,"column_start":5,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17648,"byte_end":17665,"line_start":444,"line_end":444,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17907,"byte_end":17917,"line_start":450,"line_end":450,"column_start":12,"column_end":22},"name":"complement","qualname":"<EnumSet<T>>::complement","value":"pub fn complement(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a set containing all enum variants not in this set.\n","sig":null,"attributes":[{"value":"/ Returns a set containing all enum variants not in this set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17810,"byte_end":17873,"line_start":448,"line_end":448,"column_start":5,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":17878,"byte_end":17895,"line_start":449,"line_end":449,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18095,"byte_end":18103,"line_start":456,"line_end":456,"column_start":12,"column_end":20},"name":"contains","qualname":"<EnumSet<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this set contains a value.\n","sig":null,"attributes":[{"value":"/ Checks whether this set contains a value.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18016,"byte_end":18061,"line_start":454,"line_end":454,"column_start":5,"column_end":50}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18066,"byte_end":18083,"line_start":455,"line_end":455,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18418,"byte_end":18424,"line_start":466,"line_end":466,"column_start":12,"column_end":18},"name":"insert","qualname":"<EnumSet<T>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to this set.","sig":null,"attributes":[{"value":"/ Adds a value to this set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18198,"byte_end":18227,"line_start":460,"line_end":460,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18232,"byte_end":18235,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18240,"byte_end":18307,"line_start":462,"line_end":462,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18312,"byte_end":18315,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18320,"byte_end":18384,"line_start":464,"line_end":464,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18389,"byte_end":18406,"line_start":465,"line_end":465,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18704,"byte_end":18710,"line_start":473,"line_end":473,"column_start":12,"column_end":18},"name":"remove","qualname":"<EnumSet<T>>::remove","value":"pub fn remove(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from this set. Returns whether the value was present in the set.\n","sig":null,"attributes":[{"value":"/ Removes a value from this set. Returns whether the value was present in the set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18586,"byte_end":18670,"line_start":471,"line_end":471,"column_start":5,"column_end":89}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18675,"byte_end":18692,"line_start":472,"line_end":472,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18958,"byte_end":18968,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"insert_all","qualname":"<EnumSet<T>>::insert_all","value":"pub fn insert_all(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Adds all elements in another set to this one.\n","sig":null,"attributes":[{"value":"/ Adds all elements in another set to this one.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18875,"byte_end":18924,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":18929,"byte_end":18946,"line_start":480,"line_end":480,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19155,"byte_end":19165,"line_start":486,"line_end":486,"column_start":12,"column_end":22},"name":"remove_all","qualname":"<EnumSet<T>>::remove_all","value":"pub fn remove_all(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all values in another set from this one.\n","sig":null,"attributes":[{"value":"/ Removes all values in another set from this one.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19069,"byte_end":19121,"line_start":484,"line_end":484,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19126,"byte_end":19143,"line_start":485,"line_end":485,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19555,"byte_end":19559,"line_start":495,"line_end":495,"column_start":12,"column_end":16},"name":"iter","qualname":"<EnumSet<T>>::iter","value":"pub fn iter(&Self) -> EnumSetIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Iterates the contents of the set in order from the least significant bit to the most\n significant bit.","sig":null,"attributes":[{"value":"/ Iterates the contents of the set in order from the least significant bit to the most","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19275,"byte_end":19363,"line_start":490,"line_end":490,"column_start":5,"column_end":93}},{"value":"/ significant bit.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19368,"byte_end":19388,"line_start":491,"line_end":491,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19393,"byte_end":19396,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Note that iterator invalidation is impossible as the iterator contains a copy of this type,","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19401,"byte_end":19496,"line_start":493,"line_end":493,"column_start":5,"column_end":100}},{"value":"/ rather than holding a reference to it.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19501,"byte_end":19543,"line_start":494,"line_end":494,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19992,"byte_end":19999,"line_start":507,"line_end":507,"column_start":12,"column_end":19},"name":"as_repr","qualname":"<EnumSet<T>>::as_repr","value":"pub fn as_repr(&Self) -> <T as EnumSetTypeWithRepr>::Repr where\nT: EnumSetTypeWithRepr","parent":null,"children":[],"decl_id":null,"docs":" Returns a `T::Repr` representing the elements of this set.","sig":null,"attributes":[{"value":"/ Returns a `T::Repr` representing the elements of this set.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19630,"byte_end":19692,"line_start":499,"line_end":499,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19697,"byte_end":19700,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Unlike the other `as_*` methods, this method is zero-cost and guaranteed not to fail,","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19705,"byte_end":19794,"line_start":501,"line_end":501,"column_start":5,"column_end":94}},{"value":"/ panic or truncate any bits.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19799,"byte_end":19830,"line_start":502,"line_end":502,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19835,"byte_end":19838,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ In order to use this method, the definition of `T` must have the `#[enumset(repr = \"…\")]`","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19843,"byte_end":19938,"line_start":504,"line_end":504,"column_start":5,"column_end":98}},{"value":"/ annotation.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19943,"byte_end":19958,"line_start":505,"line_end":505,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":19963,"byte_end":19980,"line_start":506,"line_end":506,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20775,"byte_end":20794,"line_start":525,"line_end":525,"column_start":19,"column_end":38},"name":"from_repr_unchecked","qualname":"<EnumSet<T>>::from_repr_unchecked","value":"pub unsafe fn from_repr_unchecked(<T as EnumSetTypeWithRepr>::Repr) -> Self\nwhere T: EnumSetTypeWithRepr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a bitset from a `T::Repr` without checking for invalid bits.","sig":null,"attributes":[{"value":"/ Constructs a bitset from a `T::Repr` without checking for invalid bits.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20114,"byte_end":20189,"line_start":512,"line_end":512,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20194,"byte_end":20197,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Unlike the other `from_*` methods, this method is zero-cost and guaranteed not to fail,","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20202,"byte_end":20293,"line_start":514,"line_end":514,"column_start":5,"column_end":96}},{"value":"/ panic or truncate any bits, provided the conditions under “Safety” are upheld.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20298,"byte_end":20384,"line_start":515,"line_end":515,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20389,"byte_end":20392,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ In order to use this method, the definition of `T` must have the `#[enumset(repr = \"…\")]`","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20397,"byte_end":20492,"line_start":517,"line_end":517,"column_start":5,"column_end":98}},{"value":"/ annotation.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20497,"byte_end":20512,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20517,"byte_end":20520,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20525,"byte_end":20537,"line_start":520,"line_end":520,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20542,"byte_end":20545,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ All bits in the provided parameter `bits` that don't correspond to an enum variant of","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20550,"byte_end":20639,"line_start":522,"line_end":522,"column_start":5,"column_end":94}},{"value":"/ `T` must be set to `0`. Behavior is **undefined** if any of these bits are set to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20644,"byte_end":20734,"line_start":523,"line_end":523,"column_start":5,"column_end":95}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20739,"byte_end":20756,"line_start":524,"line_end":524,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21235,"byte_end":21244,"line_start":538,"line_end":538,"column_start":12,"column_end":21},"name":"from_repr","qualname":"<EnumSet<T>>::from_repr","value":"pub fn from_repr(<T as EnumSetTypeWithRepr>::Repr) -> Self where\nT: EnumSetTypeWithRepr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a bitset from a `T::Repr`.","sig":null,"attributes":[{"value":"/ Constructs a bitset from a `T::Repr`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20924,"byte_end":20965,"line_start":530,"line_end":530,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20970,"byte_end":20973,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ If a bit that doesn't correspond to an enum variant is set, this","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":20978,"byte_end":21046,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ method will panic.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21051,"byte_end":21073,"line_start":533,"line_end":533,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21078,"byte_end":21081,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ In order to use this method, the definition of `T` must have the `#[enumset(repr = \"…\")]`","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21086,"byte_end":21181,"line_start":535,"line_end":535,"column_start":5,"column_end":98}},{"value":"/ annotation.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21186,"byte_end":21201,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21206,"byte_end":21223,"line_start":537,"line_end":537,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21748,"byte_end":21761,"line_start":551,"line_end":551,"column_start":12,"column_end":25},"name":"try_from_repr","qualname":"<EnumSet<T>>::try_from_repr","value":"pub fn try_from_repr(<T as EnumSetTypeWithRepr>::Repr) -> Option<Self> where\nT: EnumSetTypeWithRepr","parent":null,"children":[],"decl_id":null,"docs":" Attempts to constructs a bitset from a `T::Repr`.","sig":null,"attributes":[{"value":"/ Attempts to constructs a bitset from a `T::Repr`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21417,"byte_end":21470,"line_start":543,"line_end":543,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21475,"byte_end":21478,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If a bit that doesn't correspond to an enum variant is set, this","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21483,"byte_end":21551,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ method will return `None`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21556,"byte_end":21586,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21591,"byte_end":21594,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ In order to use this method, the definition of `T` must have the `#[enumset(repr = \"…\")]`","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21599,"byte_end":21694,"line_start":548,"line_end":548,"column_start":5,"column_end":98}},{"value":"/ annotation.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21699,"byte_end":21714,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":21719,"byte_end":21736,"line_start":550,"line_end":550,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":22273,"byte_end":22292,"line_start":566,"line_end":566,"column_start":12,"column_end":31},"name":"from_repr_truncated","qualname":"<EnumSet<T>>::from_repr_truncated","value":"pub fn from_repr_truncated(<T as EnumSetTypeWithRepr>::Repr) -> Self where\nT: EnumSetTypeWithRepr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a bitset from a `T::Repr`, ignoring invalid variants.","sig":null,"attributes":[{"value":"/ Constructs a bitset from a `T::Repr`, ignoring invalid variants.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":22043,"byte_end":22111,"line_start":561,"line_end":561,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":22116,"byte_end":22119,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ In order to use this method, the definition of `T` must have the `#[enumset(repr = \"…\")]`","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":22124,"byte_end":22219,"line_start":563,"line_end":563,"column_start":5,"column_end":98}},{"value":"/ annotation.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":22224,"byte_end":22239,"line_start":564,"line_end":564,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":22244,"byte_end":22261,"line_start":565,"line_end":565,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26939,"byte_end":26944,"line_start":675,"line_end":675,"column_start":14,"column_end":19},"name":"as_u8","qualname":"<EnumSet<T>>::as_u8","value":"pub fn as_u8(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu8\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23335,"byte_end":23352,"line_start":592,"line_end":592,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26945,"byte_end":26954,"line_start":675,"line_end":675,"column_start":20,"column_end":29},"name":"try_as_u8","qualname":"<EnumSet<T>>::try_as_u8","value":"pub fn try_as_u8(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu8\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23904,"byte_end":23921,"line_start":604,"line_end":604,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26955,"byte_end":26970,"line_start":675,"line_end":675,"column_start":30,"column_end":45},"name":"as_u8_truncated","qualname":"<EnumSet<T>>::as_u8_truncated","value":"pub fn as_u8_truncated(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu8\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24465,"byte_end":24482,"line_start":616,"line_end":616,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26869,"byte_end":26876,"line_start":674,"line_end":674,"column_start":14,"column_end":21},"name":"from_u8","qualname":"<EnumSet<T>>::from_u8","value":"pub fn from_u8(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu8\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24851,"byte_end":24868,"line_start":625,"line_end":625,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26877,"byte_end":26888,"line_start":674,"line_end":674,"column_start":22,"column_end":33},"name":"try_from_u8","qualname":"<EnumSet<T>>::try_from_u8","value":"pub fn try_from_u8(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu8\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25277,"byte_end":25294,"line_start":634,"line_end":634,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26889,"byte_end":26906,"line_start":674,"line_end":674,"column_start":34,"column_end":51},"name":"from_u8_truncated","qualname":"<EnumSet<T>>::from_u8_truncated","value":"pub fn from_u8_truncated(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu8\n`, ignoring invalid variants.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25835,"byte_end":25852,"line_start":648,"line_end":648,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26907,"byte_end":26924,"line_start":674,"line_end":674,"column_start":52,"column_end":69},"name":"from_u8_unchecked","qualname":"<EnumSet<T>>::from_u8_unchecked","value":"pub unsafe fn from_u8_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu8\n`, without checking for invalid bits.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26276,"byte_end":26279,"line_start":658,"line_end":658,"column_start":13,"column_end":16}},{"value":"/ # Safety","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26292,"byte_end":26304,"line_start":659,"line_end":659,"column_start":13,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26317,"byte_end":26320,"line_start":660,"line_end":660,"column_start":13,"column_end":16}},{"value":"/ All bits in the provided parameter `bits` that don't correspond to an enum variant","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26333,"byte_end":26419,"line_start":661,"line_end":661,"column_start":13,"column_end":99}},{"value":"/ of `T` must be set to `0`. Behavior is **undefined** if any of these bits are set","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26432,"byte_end":26517,"line_start":662,"line_end":662,"column_start":13,"column_end":98}},{"value":"/ to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26530,"byte_end":26541,"line_start":663,"line_end":663,"column_start":13,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26554,"byte_end":26571,"line_start":664,"line_end":664,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27139,"byte_end":27145,"line_start":679,"line_end":679,"column_start":14,"column_end":20},"name":"as_u16","qualname":"<EnumSet<T>>::as_u16","value":"pub fn as_u16(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu16\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23335,"byte_end":23352,"line_start":592,"line_end":592,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27146,"byte_end":27156,"line_start":679,"line_end":679,"column_start":21,"column_end":31},"name":"try_as_u16","qualname":"<EnumSet<T>>::try_as_u16","value":"pub fn try_as_u16(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu16\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23904,"byte_end":23921,"line_start":604,"line_end":604,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27157,"byte_end":27173,"line_start":679,"line_end":679,"column_start":32,"column_end":48},"name":"as_u16_truncated","qualname":"<EnumSet<T>>::as_u16_truncated","value":"pub fn as_u16_truncated(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu16\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24465,"byte_end":24482,"line_start":616,"line_end":616,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27065,"byte_end":27073,"line_start":678,"line_end":678,"column_start":14,"column_end":22},"name":"from_u16","qualname":"<EnumSet<T>>::from_u16","value":"pub fn from_u16(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu16\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24851,"byte_end":24868,"line_start":625,"line_end":625,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27074,"byte_end":27086,"line_start":678,"line_end":678,"column_start":23,"column_end":35},"name":"try_from_u16","qualname":"<EnumSet<T>>::try_from_u16","value":"pub fn try_from_u16(u16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu16\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25277,"byte_end":25294,"line_start":634,"line_end":634,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27087,"byte_end":27105,"line_start":678,"line_end":678,"column_start":36,"column_end":54},"name":"from_u16_truncated","qualname":"<EnumSet<T>>::from_u16_truncated","value":"pub fn from_u16_truncated(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu16\n`, ignoring invalid variants.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25835,"byte_end":25852,"line_start":648,"line_end":648,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27106,"byte_end":27124,"line_start":678,"line_end":678,"column_start":55,"column_end":73},"name":"from_u16_unchecked","qualname":"<EnumSet<T>>::from_u16_unchecked","value":"pub unsafe fn from_u16_unchecked(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu16\n`, without checking for invalid bits.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26276,"byte_end":26279,"line_start":658,"line_end":658,"column_start":13,"column_end":16}},{"value":"/ # Safety","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26292,"byte_end":26304,"line_start":659,"line_end":659,"column_start":13,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26317,"byte_end":26320,"line_start":660,"line_end":660,"column_start":13,"column_end":16}},{"value":"/ All bits in the provided parameter `bits` that don't correspond to an enum variant","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26333,"byte_end":26419,"line_start":661,"line_end":661,"column_start":13,"column_end":99}},{"value":"/ of `T` must be set to `0`. Behavior is **undefined** if any of these bits are set","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26432,"byte_end":26517,"line_start":662,"line_end":662,"column_start":13,"column_end":98}},{"value":"/ to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26530,"byte_end":26541,"line_start":663,"line_end":663,"column_start":13,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26554,"byte_end":26571,"line_start":664,"line_end":664,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27342,"byte_end":27348,"line_start":683,"line_end":683,"column_start":14,"column_end":20},"name":"as_u32","qualname":"<EnumSet<T>>::as_u32","value":"pub fn as_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu32\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23335,"byte_end":23352,"line_start":592,"line_end":592,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27349,"byte_end":27359,"line_start":683,"line_end":683,"column_start":21,"column_end":31},"name":"try_as_u32","qualname":"<EnumSet<T>>::try_as_u32","value":"pub fn try_as_u32(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu32\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23904,"byte_end":23921,"line_start":604,"line_end":604,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27360,"byte_end":27376,"line_start":683,"line_end":683,"column_start":32,"column_end":48},"name":"as_u32_truncated","qualname":"<EnumSet<T>>::as_u32_truncated","value":"pub fn as_u32_truncated(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu32\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24465,"byte_end":24482,"line_start":616,"line_end":616,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27268,"byte_end":27276,"line_start":682,"line_end":682,"column_start":14,"column_end":22},"name":"from_u32","qualname":"<EnumSet<T>>::from_u32","value":"pub fn from_u32(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu32\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24851,"byte_end":24868,"line_start":625,"line_end":625,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27277,"byte_end":27289,"line_start":682,"line_end":682,"column_start":23,"column_end":35},"name":"try_from_u32","qualname":"<EnumSet<T>>::try_from_u32","value":"pub fn try_from_u32(u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu32\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25277,"byte_end":25294,"line_start":634,"line_end":634,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27290,"byte_end":27308,"line_start":682,"line_end":682,"column_start":36,"column_end":54},"name":"from_u32_truncated","qualname":"<EnumSet<T>>::from_u32_truncated","value":"pub fn from_u32_truncated(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu32\n`, ignoring invalid variants.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25835,"byte_end":25852,"line_start":648,"line_end":648,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27309,"byte_end":27327,"line_start":682,"line_end":682,"column_start":55,"column_end":73},"name":"from_u32_unchecked","qualname":"<EnumSet<T>>::from_u32_unchecked","value":"pub unsafe fn from_u32_unchecked(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu32\n`, without checking for invalid bits.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26276,"byte_end":26279,"line_start":658,"line_end":658,"column_start":13,"column_end":16}},{"value":"/ # Safety","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26292,"byte_end":26304,"line_start":659,"line_end":659,"column_start":13,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26317,"byte_end":26320,"line_start":660,"line_end":660,"column_start":13,"column_end":16}},{"value":"/ All bits in the provided parameter `bits` that don't correspond to an enum variant","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26333,"byte_end":26419,"line_start":661,"line_end":661,"column_start":13,"column_end":99}},{"value":"/ of `T` must be set to `0`. Behavior is **undefined** if any of these bits are set","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26432,"byte_end":26517,"line_start":662,"line_end":662,"column_start":13,"column_end":98}},{"value":"/ to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26530,"byte_end":26541,"line_start":663,"line_end":663,"column_start":13,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26554,"byte_end":26571,"line_start":664,"line_end":664,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27545,"byte_end":27551,"line_start":687,"line_end":687,"column_start":14,"column_end":20},"name":"as_u64","qualname":"<EnumSet<T>>::as_u64","value":"pub fn as_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu64\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23335,"byte_end":23352,"line_start":592,"line_end":592,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27552,"byte_end":27562,"line_start":687,"line_end":687,"column_start":21,"column_end":31},"name":"try_as_u64","qualname":"<EnumSet<T>>::try_as_u64","value":"pub fn try_as_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu64\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23904,"byte_end":23921,"line_start":604,"line_end":604,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27563,"byte_end":27579,"line_start":687,"line_end":687,"column_start":32,"column_end":48},"name":"as_u64_truncated","qualname":"<EnumSet<T>>::as_u64_truncated","value":"pub fn as_u64_truncated(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu64\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24465,"byte_end":24482,"line_start":616,"line_end":616,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27471,"byte_end":27479,"line_start":686,"line_end":686,"column_start":14,"column_end":22},"name":"from_u64","qualname":"<EnumSet<T>>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu64\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24851,"byte_end":24868,"line_start":625,"line_end":625,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27480,"byte_end":27492,"line_start":686,"line_end":686,"column_start":23,"column_end":35},"name":"try_from_u64","qualname":"<EnumSet<T>>::try_from_u64","value":"pub fn try_from_u64(u64) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu64\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25277,"byte_end":25294,"line_start":634,"line_end":634,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27493,"byte_end":27511,"line_start":686,"line_end":686,"column_start":36,"column_end":54},"name":"from_u64_truncated","qualname":"<EnumSet<T>>::from_u64_truncated","value":"pub fn from_u64_truncated(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu64\n`, ignoring invalid variants.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25835,"byte_end":25852,"line_start":648,"line_end":648,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27512,"byte_end":27530,"line_start":686,"line_end":686,"column_start":55,"column_end":73},"name":"from_u64_unchecked","qualname":"<EnumSet<T>>::from_u64_unchecked","value":"pub unsafe fn from_u64_unchecked(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu64\n`, without checking for invalid bits.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26276,"byte_end":26279,"line_start":658,"line_end":658,"column_start":13,"column_end":16}},{"value":"/ # Safety","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26292,"byte_end":26304,"line_start":659,"line_end":659,"column_start":13,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26317,"byte_end":26320,"line_start":660,"line_end":660,"column_start":13,"column_end":16}},{"value":"/ All bits in the provided parameter `bits` that don't correspond to an enum variant","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26333,"byte_end":26419,"line_start":661,"line_end":661,"column_start":13,"column_end":99}},{"value":"/ of `T` must be set to `0`. Behavior is **undefined** if any of these bits are set","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26432,"byte_end":26517,"line_start":662,"line_end":662,"column_start":13,"column_end":98}},{"value":"/ to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26530,"byte_end":26541,"line_start":663,"line_end":663,"column_start":13,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26554,"byte_end":26571,"line_start":664,"line_end":664,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27758,"byte_end":27765,"line_start":691,"line_end":691,"column_start":14,"column_end":21},"name":"as_u128","qualname":"<EnumSet<T>>::as_u128","value":"pub fn as_u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nu128\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23335,"byte_end":23352,"line_start":592,"line_end":592,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27766,"byte_end":27777,"line_start":691,"line_end":691,"column_start":22,"column_end":33},"name":"try_as_u128","qualname":"<EnumSet<T>>::try_as_u128","value":"pub fn try_as_u128(&Self) -> Option<u128>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nu128\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23904,"byte_end":23921,"line_start":604,"line_end":604,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27778,"byte_end":27795,"line_start":691,"line_end":691,"column_start":34,"column_end":51},"name":"as_u128_truncated","qualname":"<EnumSet<T>>::as_u128_truncated","value":"pub fn as_u128_truncated(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nu128\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24465,"byte_end":24482,"line_start":616,"line_end":616,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27680,"byte_end":27689,"line_start":690,"line_end":690,"column_start":14,"column_end":23},"name":"from_u128","qualname":"<EnumSet<T>>::from_u128","value":"pub fn from_u128(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu128\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24851,"byte_end":24868,"line_start":625,"line_end":625,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27690,"byte_end":27703,"line_start":690,"line_end":690,"column_start":24,"column_end":37},"name":"try_from_u128","qualname":"<EnumSet<T>>::try_from_u128","value":"pub fn try_from_u128(u128) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nu128\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25277,"byte_end":25294,"line_start":634,"line_end":634,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27704,"byte_end":27723,"line_start":690,"line_end":690,"column_start":38,"column_end":57},"name":"from_u128_truncated","qualname":"<EnumSet<T>>::from_u128_truncated","value":"pub fn from_u128_truncated(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu128\n`, ignoring invalid variants.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25835,"byte_end":25852,"line_start":648,"line_end":648,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27724,"byte_end":27743,"line_start":690,"line_end":690,"column_start":58,"column_end":77},"name":"from_u128_unchecked","qualname":"<EnumSet<T>>::from_u128_unchecked","value":"pub unsafe fn from_u128_unchecked(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nu128\n`, without checking for invalid bits.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26276,"byte_end":26279,"line_start":658,"line_end":658,"column_start":13,"column_end":16}},{"value":"/ # Safety","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26292,"byte_end":26304,"line_start":659,"line_end":659,"column_start":13,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26317,"byte_end":26320,"line_start":660,"line_end":660,"column_start":13,"column_end":16}},{"value":"/ All bits in the provided parameter `bits` that don't correspond to an enum variant","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26333,"byte_end":26419,"line_start":661,"line_end":661,"column_start":13,"column_end":99}},{"value":"/ of `T` must be set to `0`. Behavior is **undefined** if any of these bits are set","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26432,"byte_end":26517,"line_start":662,"line_end":662,"column_start":13,"column_end":98}},{"value":"/ to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26530,"byte_end":26541,"line_start":663,"line_end":663,"column_start":13,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26554,"byte_end":26571,"line_start":664,"line_end":664,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27984,"byte_end":27992,"line_start":695,"line_end":695,"column_start":14,"column_end":22},"name":"as_usize","qualname":"<EnumSet<T>>::as_usize","value":"pub fn as_usize(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"Returns a `\nusize\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23335,"byte_end":23352,"line_start":592,"line_end":592,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27993,"byte_end":28005,"line_start":695,"line_end":695,"column_start":23,"column_end":35},"name":"try_as_usize","qualname":"<EnumSet<T>>::try_as_usize","value":"pub fn try_as_usize(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"Tries to return a `\nusize\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":23904,"byte_end":23921,"line_start":604,"line_end":604,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28006,"byte_end":28024,"line_start":695,"line_end":695,"column_start":36,"column_end":54},"name":"as_usize_truncated","qualname":"<EnumSet<T>>::as_usize_truncated","value":"pub fn as_usize_truncated(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"Returns a truncated `\nusize\n` representing the elements of this set.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24465,"byte_end":24482,"line_start":616,"line_end":616,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27902,"byte_end":27912,"line_start":694,"line_end":694,"column_start":14,"column_end":24},"name":"from_usize","qualname":"<EnumSet<T>>::from_usize","value":"pub fn from_usize(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nusize\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":24851,"byte_end":24868,"line_start":625,"line_end":625,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27913,"byte_end":27927,"line_start":694,"line_end":694,"column_start":25,"column_end":39},"name":"try_from_usize","qualname":"<EnumSet<T>>::try_from_usize","value":"pub fn try_from_usize(usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"Attempts to constructs a bitset from a `\nusize\n`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25277,"byte_end":25294,"line_start":634,"line_end":634,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27928,"byte_end":27948,"line_start":694,"line_end":694,"column_start":40,"column_end":60},"name":"from_usize_truncated","qualname":"<EnumSet<T>>::from_usize_truncated","value":"pub fn from_usize_truncated(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nusize\n`, ignoring invalid variants.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":25835,"byte_end":25852,"line_start":648,"line_end":648,"column_start":13,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":27949,"byte_end":27969,"line_start":694,"line_end":694,"column_start":61,"column_end":81},"name":"from_usize_unchecked","qualname":"<EnumSet<T>>::from_usize_unchecked","value":"pub unsafe fn from_usize_unchecked(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"Constructs a bitset from a `\nusize\n`, without checking for invalid bits.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26276,"byte_end":26279,"line_start":658,"line_end":658,"column_start":13,"column_end":16}},{"value":"/ # Safety","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26292,"byte_end":26304,"line_start":659,"line_end":659,"column_start":13,"column_end":25}},{"value":"/","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26317,"byte_end":26320,"line_start":660,"line_end":660,"column_start":13,"column_end":16}},{"value":"/ All bits in the provided parameter `bits` that don't correspond to an enum variant","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26333,"byte_end":26419,"line_start":661,"line_end":661,"column_start":13,"column_end":99}},{"value":"/ of `T` must be set to `0`. Behavior is **undefined** if any of these bits are set","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26432,"byte_end":26517,"line_start":662,"line_end":662,"column_start":13,"column_end":98}},{"value":"/ to `1`.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26530,"byte_end":26541,"line_start":663,"line_end":663,"column_start":13,"column_end":24}},{"value":"inline(always)","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":26554,"byte_end":26571,"line_start":664,"line_end":664,"column_start":13,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":32418,"byte_end":32429,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"EnumSetIter","qualname":"::EnumSetIter","value":"EnumSetIter {  }","parent":null,"children":[{"krate":0,"index":506}],"decl_id":null,"docs":" The iterator used by [`EnumSet`]s.\n","sig":null,"attributes":[{"value":"/ The iterator used by [`EnumSet`]s.","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":32344,"byte_end":32382,"line_start":854,"line_end":854,"column_start":1,"column_end":39}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14066,"byte_end":14073,"line_start":338,"line_end":338,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28063,"byte_end":28070,"line_start":698,"line_end":698,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28200,"byte_end":28207,"line_start":705,"line_end":705,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28369,"byte_end":28376,"line_start":713,"line_end":713,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28545,"byte_end":28552,"line_start":718,"line_end":718,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28709,"byte_end":28716,"line_start":723,"line_end":723,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28873,"byte_end":28880,"line_start":728,"line_end":728,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29056,"byte_end":29063,"line_start":734,"line_end":734,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29262,"byte_end":29269,"line_start":741,"line_end":741,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29472,"byte_end":29479,"line_start":748,"line_end":748,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29675,"byte_end":29682,"line_start":755,"line_end":755,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29900,"byte_end":29907,"line_start":763,"line_end":763,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30073,"byte_end":30080,"line_start":769,"line_end":769,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30248,"byte_end":30255,"line_start":775,"line_end":775,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30423,"byte_end":30430,"line_start":781,"line_end":781,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30567,"byte_end":30574,"line_start":788,"line_end":788,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30729,"byte_end":30736,"line_start":796,"line_end":796,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30842,"byte_end":30849,"line_start":802,"line_end":802,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31002,"byte_end":31009,"line_start":807,"line_end":807,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31479,"byte_end":31486,"line_start":824,"line_end":824,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31620,"byte_end":31627,"line_start":829,"line_end":829,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31789,"byte_end":31796,"line_start":834,"line_end":834,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":32492,"byte_end":32503,"line_start":859,"line_end":859,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":32628,"byte_end":32639,"line_start":865,"line_end":865,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33125,"byte_end":33136,"line_start":883,"line_end":883,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33505,"byte_end":33516,"line_start":895,"line_end":895,"column_start":44,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33559,"byte_end":33566,"line_start":897,"line_end":897,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33765,"byte_end":33772,"line_start":905,"line_end":905,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33974,"byte_end":33981,"line_start":913,"line_end":913,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":34202,"byte_end":34209,"line_start":921,"line_end":921,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36062,"byte_end":36066,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36073,"byte_end":36076,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2745},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36083,"byte_end":36085,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36092,"byte_end":36097,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":9678},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36104,"byte_end":36108,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":9885},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36149,"byte_end":36155,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36177,"byte_end":36182,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3189},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36204,"byte_end":36210,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3194},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/repr.rs","byte_start":36232,"byte_end":36235,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":3177},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9041,"byte_end":9045,"line_start":229,"line_end":229,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9048,"byte_end":9050,"line_start":229,"line_end":229,"column_start":38,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2714},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9053,"byte_end":9071,"line_start":229,"line_end":229,"column_start":43,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":37},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9714,"byte_end":9725,"line_start":241,"line_end":241,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":99},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":9728,"byte_end":9746,"line_start":241,"line_end":241,"column_start":19,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":37},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":14066,"byte_end":14073,"line_start":338,"line_end":338,"column_start":22,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28063,"byte_end":28070,"line_start":698,"line_end":698,"column_start":34,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28200,"byte_end":28207,"line_start":705,"line_end":705,"column_start":39,"column_end":46},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7783}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28369,"byte_end":28376,"line_start":713,"line_end":713,"column_start":30,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7742}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28545,"byte_end":28552,"line_start":718,"line_end":718,"column_start":50,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7742}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28709,"byte_end":28716,"line_start":723,"line_end":723,"column_start":33,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7742}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":28873,"byte_end":28880,"line_start":728,"line_end":728,"column_start":41,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7742}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29056,"byte_end":29063,"line_start":734,"line_end":734,"column_start":54,"column_end":61},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29262,"byte_end":29269,"line_start":741,"line_end":741,"column_start":57,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3184}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29472,"byte_end":29479,"line_start":748,"line_end":748,"column_start":56,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3189}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29675,"byte_end":29682,"line_start":755,"line_end":755,"column_start":57,"column_end":64},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3194}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":29900,"byte_end":29907,"line_start":763,"line_end":763,"column_start":60,"column_end":67},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30073,"byte_end":30080,"line_start":769,"line_end":769,"column_start":63,"column_end":70},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3211}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30248,"byte_end":30255,"line_start":775,"line_end":775,"column_start":62,"column_end":69},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3215}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30423,"byte_end":30430,"line_start":781,"line_end":781,"column_start":63,"column_end":70},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3219}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30567,"byte_end":30574,"line_start":788,"line_end":788,"column_start":30,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":3177}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30729,"byte_end":30736,"line_start":796,"line_end":796,"column_start":34,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":30842,"byte_end":30849,"line_start":802,"line_end":802,"column_start":39,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31002,"byte_end":31009,"line_start":807,"line_end":807,"column_start":40,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31479,"byte_end":31486,"line_start":824,"line_end":824,"column_start":31,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":9885}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31620,"byte_end":31627,"line_start":829,"line_end":829,"column_start":37,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":31789,"byte_end":31796,"line_start":834,"line_end":834,"column_start":30,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":32492,"byte_end":32503,"line_start":859,"line_end":859,"column_start":22,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":32628,"byte_end":32639,"line_start":865,"line_end":865,"column_start":35,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":504},"to":{"krate":1,"index":7978}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33125,"byte_end":33136,"line_start":883,"line_end":883,"column_start":46,"column_end":57},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":504},"to":{"krate":1,"index":7827}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33505,"byte_end":33516,"line_start":895,"line_end":895,"column_start":44,"column_end":55},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":504},"to":{"krate":1,"index":7852}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33559,"byte_end":33566,"line_start":897,"line_end":897,"column_start":36,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7792}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33765,"byte_end":33772,"line_start":905,"line_end":905,"column_start":42,"column_end":49},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7779}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":33974,"byte_end":33981,"line_start":913,"line_end":913,"column_start":45,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7792}},{"span":{"file_name":"/home/noah/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-1.0.11/src/lib.rs","byte_start":34202,"byte_end":34209,"line_start":921,"line_end":921,"column_start":51,"column_end":58},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":7779}}]}